create or alter procedure DADOS_FINANCEIRO_RECEBER
returns (
    CODE_PCR integer,
    CODE_EMP integer,
    DATA_CAD date,
    NUM_DOC varchar(15),
    DATA_VENC date,
    NOME_CLI varchar(60),
    VLR_PARC double precision,
    SITUACAO varchar(1),
    NUMERO varchar(30),
    EMITENTE varchar(60),
    EMISSAO date,
    NSU varchar(15),
    CODE_CR integer,
    CODE_PORT integer,
    CODE_TD integer,
    CODE_BCO integer,
    AGENCIA varchar(15),
    CONTA varchar(20),
    DOCUMENTO varchar(30))
as
declare variable CODE_DUP integer;
declare variable NUM_ROWS integer;
BEGIN
  SELECT
      CAST(PAR_VALOR AS INTEGER)
  FROM
      PARAMETRO
  WHERE
      PAR_CODIGO = 11
  INTO
      :CODE_DUP;

  FOR
    SELECT
        P.PCR_CODIGO,
        P.CR_CODIGO,
        P.PCR_DOCUMENTO,
        P.PCR_DATA_VENCIMENTO,
        P.PCR_VALOR_PARCELA,
        P.PCR_SITUACAO,
        P.PCR_NSU,
        P.TD_CODIGO,
        P.PORT_CODIGO,
        T.TD_NOME
    FROM
        PARCELA_CONTA_RECEBER P
    LEFT JOIN
        TIPO_DOCUMENTO T ON P.TD_CODIGO = T.TD_CODIGO
    WHERE
        P.CR_CODIGO > 0
    INTO
        :CODE_PCR,
        :CODE_CR,
        :NUM_DOC,
        :DATA_VENC,
        :VLR_PARC,
        :SITUACAO,
        :NSU,
        :CODE_TD,
        :CODE_PORT,
        :DOCUMENTO
    DO
    BEGIN
      EMISSAO = NULL;
      EMITENTE = NULL;
      NUMERO = NULL;
      SELECT
          CAST(C.CR_DATA_CADASTRO AS DATE),
          C.EMP_CODIGO,
          P.PES_NOME
      FROM
          CONTA_RECEBER C,
          PESSOA P
      WHERE
          C.CLI_CODIGO = P.PES_CODIGO
      AND C.CR_CODIGO = :CODE_CR
      INTO
          :DATA_CAD,
          :CODE_EMP,
          :NOME_CLI;

      if (CODE_TD = CODE_DUP) then
      BEGIN
        SELECT
            P.PCRD_NOSSO_NUMERO,
            B.BCO_NOME
        FROM
            PARCELA_CONTA_RECEBER_DUPLICATA P,
            BANCO B
        WHERE
            P.CR_CODIGO = :CODE_CR
        AND P.PCR_CODIGO = :CODE_PCR
        AND P.BCO_CODIGO = B.BCO_CODIGO
        INTO
            :NUMERO,
            :EMITENTE;
        if (EMITENTE IS NOT NULL) then
          EMISSAO = DATA_CAD;
      END
      ELSE
      BEGIN
        SELECT
            COUNT(*)
        FROM
            TIPO_DOCUMENTO T
        WHERE
            T.TD_CODIGO = :CODE_TD
        AND T.TD_TIPO = 'C'
        INTO
           :NUM_ROWS;

        if (NUM_ROWS > 0) then
        BEGIN
          SELECT
              BCO_CODIGO,
              PCRC_AGENCIA,
              PCRC_CONTA,
              PCRC_NUMERO,
              PCRC_EMITENTE
          FROM
              PARCELA_CONTA_RECEBER_CHEQUE
          WHERE
              CR_CODIGO = :CODE_CR
          AND PCR_CODIGO = :CODE_PCR
          INTO
              :CODE_BCO,
              :AGENCIA,
              :CONTA,
              :NUMERO,
              :EMITENTE;
          if (EMITENTE IS NOT NULL) then
            EMISSAO = DATA_CAD;
        END
      END
      SUSPEND;
    END
END;

COMMIT;


create or alter procedure SELECT_DADOS_FECHAMENTO (
    DATA_INI date,
    DATA_FIM date,
    CLIENTE_INI integer,
    CLIENTE_FIM integer,
    REP_INI integer,
    REP_FIM integer)
returns (
    CODE_CLI integer,
    NOME_CLI varchar(60),
    CPF_CNPJ_CLI varchar(15),
    TEL_CLI varchar(15),
    MARCA_CLI varchar(20),
    ENDERECO_CLI varchar(120),
    TOTAL_DEBITOS double precision,
    TOTAL_CREDITOS double precision,
    TOTAL_INDENIZACOES double precision,
    TOTAL_PENDENCIAS double precision,
    TOTAL_SERVICOS double precision,
    TOTAL_FECHAMENTO double precision)
as
declare variable LG varchar(60);
declare variable BAR varchar(30);
declare variable CID varchar(30);
declare variable UFS varchar(2);
declare variable QD varchar(5);
declare variable LT varchar(5);
declare variable NM varchar(5);
declare variable TOT_OP double precision;
declare variable TOT_OS double precision;
declare variable CODE_DOC integer;
declare variable TOT_OP_PEN double precision;
declare variable TOT_OS_PEN double precision;
declare variable CHQ_DEV double precision;
declare variable VLR_PAG_DEV double precision;
declare variable VLR_PAG_CRD double precision;
declare variable DEBITO_BAIXA double precision;
begin
  SELECT
      CAST(PAR_VALOR AS INTEGER)
  FROM
      PARAMETRO
  WHERE
      PAR_CODIGO = 9
  INTO
      :CODE_DOC;

  FOR
    SELECT
        C.CLI_CODIGO, 
        P.PES_NOME,
        P.PES_CPF_CNPJ,
        P.PES_TELEFONE_1,
        M.MARC_NOME,
        E.END_LOGRADOURO,
        E.END_QUADRA,
        E.END_LOTE,
        E.END_NUMERO,
        E.END_BAIRRO,
        CD.CID_NOME,
        U.UF_NOME
    FROM
        CLIENTE C,
        PESSOA P,
        ENDERECO E,
        CIDADE CD,
        UF U,
        MARCA M
    WHERE
        C.CLI_CODIGO = P.PES_CODIGO
    AND C.MARC_CODIGO = M.MARC_CODIGO
    AND P.PES_CODIGO = E.PES_CODIGO
    AND E.CID_CODIGO = CD.CID_CODIGO
    AND CD.UF_CODIGO = U.UF_CODIGO
    AND C.CLI_CODIGO BETWEEN :CLIENTE_INI AND :CLIENTE_FIM
    AND C.REP_CODIGO BETWEEN :REP_INI AND :REP_FIM
    INTO
        :CODE_CLI,
        :NOME_CLI,
        :CPF_CNPJ_CLI,
        :TEL_CLI,
        :MARCA_CLI, 
        :LG,
        :QD,
        :LT, 
        :NM, 
        :BAR,
        :CID,
        :UFS
    DO
    BEGIN
      ENDERECO_CLI = LG;
      if ( NOT NM IS NULL) then
         ENDERECO_CLI = ENDERECO_CLI || ', ' || NM;
      if (NOT QD IS NULL) then
        ENDERECO_CLI = ENDERECO_CLI || ' QD ' || QD;
      if (NOT QD IS NULL) then
        ENDERECO_CLI = ENDERECO_CLI || ' LT ' || LT;
      ENDERECO_CLI = ENDERECO_CLI || ', ' || BAR || ', ' || CID || '-' || UFS;

      SELECT
          COALESCE(SUM(IO.IOP_VALOR_TOTAL),0)
      FROM
          ORDEM_PRODUCAO O,
          ITEM_ORDEM_SERVICO I,
          ORDEM_SERVICO OS,
          ITEM_ORDEM_PRODUCAO IO
      WHERE
          O.IOS_CODIGO = I.IOS_CODIGO
      AND I.OS_CODIGO = OS.OS_CODIGO
      AND O.OP_CODIGO = IO.OP_CODIGO
      AND CAST(O.OP_DATA_CONCLUSAO AS DATE) BETWEEN :DATA_INI AND  :DATA_FIM
      AND OS.CLI_CODIGO = :CODE_CLI
      AND O.OP_SITUACAO = 'N'
      INTO
          :TOT_OP;

      SELECT
          COALESCE(SUM(I.IOS_VALOR_TOTAL),0)
      FROM
          ORDEM_SERVICO OS,
          ITEM_ORDEM_SERVICO I
      WHERE
          OS.OS_CODIGO = I.OS_CODIGO
      AND CAST(OS.OS_DATA AS DATE) BETWEEN :DATA_INI AND  :DATA_FIM
      AND OS.CLI_CODIGO = :CODE_CLI
      AND OS.OS_SITUACAO = 'N'
      AND OS.OS_TIPO = 'S'
      INTO
          :TOT_OS;

      TOTAL_SERVICOS = TOT_OP + TOT_OS;

      if (TOTAL_SERVICOS > 0) then
      BEGIN
        SELECT
            COALESCE(SUM(IND.IND_VALOR_TOTAL),0)
        FROM
            INDENIZACAO IND
        WHERE
            IND.CLI_CODIGO = :CODE_CLI
        AND IND.IND_SITUACAO = 'A'
        INTO
            :TOTAL_INDENIZACOES;

        SELECT
            COALESCE(SUM(PC.PCR_VALOR_PARCELA),0)
        FROM
            PARCELA_CONTA_RECEBER PC,
            CONTA_RECEBER CR
        WHERE
            CR.CR_CODIGO = PC.CR_CODIGO
        AND CR.CLI_CODIGO = :CODE_CLI
        AND PC.TD_CODIGO = :CODE_DOC
        AND PC.PCR_SITUACAO IN('A','L')
        INTO
            :TOTAL_DEBITOS;

        SELECT
            COALESCE(SUM(PC.PCR_VALOR_PARCELA),0)
        FROM
            PARCELA_CONTA_RECEBER PC,
            CONTA_RECEBER CR,
            PORTADOR PT
        WHERE
            CR.CR_CODIGO = PC.CR_CODIGO
        AND CR.CLI_CODIGO = :CODE_CLI
        AND PC.PCR_SITUACAO IN('A','L')
        AND PT.PORT_CODIGO = PC.PORT_CODIGO
        AND PT.PORT_NOME LIKE '%CHEQUE DEVOLVIDO%'
        INTO
            :CHQ_DEV;

        SELECT
            COALESCE(SUM(BC.BCR_VALOR),0)
        FROM
            PARCELA_CONTA_RECEBER PC,
            CONTA_RECEBER CR,
            PORTADOR PT,
            BAIXA_CONTA_RECEBER BC
        WHERE
            CR.CR_CODIGO = PC.CR_CODIGO
        AND CR.CLI_CODIGO = :CODE_CLI
        AND PC.PCR_CODIGO = BC.PCR_CODIGO
        AND PC.PCR_SITUACAO = 'L'
        AND PT.PORT_CODIGO = PC.PORT_CODIGO
        AND PT.PORT_NOME LIKE '%CHEQUE DEVOLVIDO%'
        INTO
            :VLR_PAG_DEV;

        SELECT
            COALESCE(SUM(BCR.BCR_VALOR),0)
        FROM
            PARCELA_CONTA_RECEBER PC,
            CONTA_RECEBER CR,
            PORTADOR PT,
            BAIXA_CONTA_RECEBER BCR
        WHERE
            CR.CR_CODIGO = PC.CR_CODIGO
        AND CR.CLI_CODIGO = :CODE_CLI
        AND PC.TD_CODIGO = :CODE_DOC
        AND PC.PCR_SITUACAO IN('A','L')
        AND PT.PORT_CODIGO = PC.PORT_CODIGO
        AND PT.PORT_NOME <> '%CHEQUE DEVOLVIDO%'
        AND BCR.PCR_CODIGO = PC.PCR_CODIGO
        INTO
            :DEBITO_BAIXA;

        TOTAL_DEBITOS = TOTAL_DEBITOS + CHQ_DEV - VLR_PAG_DEV - DEBITO_BAIXA;


        SELECT
            COALESCE(SUM(PG.PCP_VALOR_PARCELA),0)
        FROM
            PARCELA_CONTA_PAGAR PG,
            CONTA_PAGAR CP
        WHERE
            CP.CPR_CODIGO = PG.CPR_CODIGO
        AND CP.FORN_CODIGO = :CODE_CLI
        AND PG.TD_CODIGO = :CODE_DOC
        AND PG.PCP_SITUACAO IN('A','L')
        INTO
            :TOTAL_CREDITOS;

        SELECT
            COALESCE(SUM(B.BCP_VALOR),0)
        FROM
            PARCELA_CONTA_PAGAR PG,
            CONTA_PAGAR CP,
            BAIXA_CONTA_PAGAR B
        WHERE
            CP.CPR_CODIGO = PG.CPR_CODIGO
        AND CP.FORN_CODIGO = :CODE_CLI
        AND PG.TD_CODIGO = :CODE_DOC
        AND PG.CPR_CODIGO = B.CPR_CODIGO
        AND PG.PCP_SITUACAO = 'L'
        INTO
            :VLR_PAG_CRD;

        TOTAL_CREDITOS = TOTAL_CREDITOS - VLR_PAG_CRD ;

        SELECT
            COALESCE(SUM(IO.IOP_VALOR_TOTAL),0)
        FROM
            ORDEM_PRODUCAO O,
            ITEM_ORDEM_SERVICO I,
            ORDEM_SERVICO OS,
            ITEM_ORDEM_PRODUCAO IO
        WHERE
            O.IOS_CODIGO = I.IOS_CODIGO
        AND I.OS_CODIGO = OS.OS_CODIGO
        AND O.OP_CODIGO = IO.OP_CODIGO
        AND CAST(O.OP_DATA_CONCLUSAO AS DATE) < :DATA_INI
        AND OS.CLI_CODIGO = :CODE_CLI
        AND O.OP_SITUACAO = 'N'
        INTO
            :TOT_OP_PEN;

        SELECT
            COALESCE(SUM(I.IOS_VALOR_TOTAL),0)
        FROM
            ORDEM_SERVICO OS,
            ITEM_ORDEM_SERVICO I
        WHERE
            OS.OS_CODIGO = I.OS_CODIGO
        AND CAST(OS.OS_DATA AS DATE) < :DATA_INI
        AND OS.CLI_CODIGO = :CODE_CLI
        AND OS.OS_SITUACAO = 'N'
        AND OS.OS_TIPO = 'S'
        INTO
            :TOT_OS_PEN;

        TOTAL_PENDENCIAS = TOT_OP_PEN + TOT_OS_PEN;
        TOTAL_FECHAMENTO = (TOTAL_SERVICOS + TOTAL_DEBITOS + TOTAL_PENDENCIAS) - (TOTAL_CREDITOS + TOTAL_INDENIZACOES);
        SUSPEND;
      END
    END
END;

COMMIT;

create or alter procedure SELECT_PRODUCAO_CLI (
    DATA_INI date,
    DATA_FIM date,
    CLIENTE_INI integer,
    CLIENTE_FIM integer,
    REP_INI integer,
    REP_FIM integer,
    SIT varchar(1),
    PEN varchar(1))
returns (
    CODE_CLI integer,
    NOME_CLI varchar(60),
    MARCA_CLI varchar(30),
    QTDE_KG double precision,
    QTDE_PC double precision,
    MEDIA_PC double precision,
    MEDIA_KG double precision,
    VLR_SERVICO double precision,
    VLR_CREDITO double precision,
    VLR_DEBITO double precision,
    VLR_INDENIZACAO double precision,
    VLR_PENDENTE double precision,
    VLR_TOTAL double precision)
as
declare variable CODE_DOC integer;
declare variable QTDE_PC_OP integer;
declare variable QTDE_PC_OS integer;
declare variable QTDE_KG_OP double precision;
declare variable QTDE_KG_OS double precision;
declare variable VALOR_OP double precision;
declare variable VALOR_OS double precision;
declare variable TOT_OP_PEN double precision;
declare variable TOT_OS_PEN double precision;
begin
  SELECT
      CAST(PAR_VALOR AS INTEGER)
  FROM
      PARAMETRO
  WHERE
      PAR_CODIGO = 9
  INTO
      :CODE_DOC;

  FOR
    SELECT
        C.CLI_CODIGO, 
        P.PES_NOME,
        M.MARC_NOME

    FROM
        CLIENTE C,
        PESSOA P,
        MARCA M
    WHERE
        C.CLI_CODIGO = P.PES_CODIGO
    AND C.MARC_CODIGO = M.MARC_CODIGO
    AND C.CLI_CODIGO BETWEEN :CLIENTE_INI AND :CLIENTE_FIM
    AND C.REP_CODIGO BETWEEN :REP_INI AND :REP_FIM
    INTO
        :CODE_CLI,
        :NOME_CLI,
        :MARCA_CLI
    DO
    BEGIN
      if (SIT = 'A') then
      BEGIN
        SELECT
            COALESCE(SUM(IO.IOP_QUANTIDADE_PCS),0),
            COALESCE(SUM(IO.IOP_QUANTIDADE_KGS),0),
            COALESCE(SUM(IO.IOP_VALOR_TOTAL),0)
        FROM
            ORDEM_PRODUCAO O,
            ITEM_ORDEM_SERVICO I,
            ORDEM_SERVICO OS,
            ITEM_ORDEM_PRODUCAO IO
        WHERE
            O.IOS_CODIGO = I.IOS_CODIGO
        AND I.OS_CODIGO = OS.OS_CODIGO
        AND CAST(O.OP_DATA_CONCLUSAO AS DATE) BETWEEN :DATA_INI AND  :DATA_FIM
        AND O.OP_CODIGO = IO.OP_CODIGO
        AND OS.CLI_CODIGO = :CODE_CLI
        AND O.OP_SITUACAO IN('N','F')
        INTO
           :QTDE_PC_OP,
           :QTDE_KG_OP,
           :VALOR_OP;


        SELECT
            COALESCE(SUM(I.IOS_QUANTIDADE_PCS),0),
            COALESCE(SUM(I.IOS_QUANTIDADE_KGS),0),
            COALESCE(SUM(I.IOS_VALOR_TOTAL),0)
        FROM
            ITEM_ORDEM_SERVICO I,
            ORDEM_SERVICO OS
        WHERE
            I.OS_CODIGO = OS.OS_CODIGO
        AND CAST(OS.OS_DATA AS DATE) BETWEEN :DATA_INI AND  :DATA_FIM
        AND OS.CLI_CODIGO = :CODE_CLI
        AND OS.OS_SITUACAO IN('N','F')
        AND OS.OS_TIPO = 'S'
        INTO
           :QTDE_PC_OS,
           :QTDE_KG_OS,
           :VALOR_OS;
      END
      ELSE
      BEGIN
        SELECT
            COALESCE(SUM(IO.IOP_QUANTIDADE_PCS),0),
            COALESCE(SUM(IO.IOP_QUANTIDADE_KGS),0),
            COALESCE(SUM(IO.IOP_VALOR_TOTAL),0)
        FROM
            ORDEM_PRODUCAO O,
            ITEM_ORDEM_SERVICO I,
            ORDEM_SERVICO OS,
            ITEM_ORDEM_PRODUCAO IO
        WHERE
            O.IOS_CODIGO = I.IOS_CODIGO
        AND I.OS_CODIGO = OS.OS_CODIGO
        AND CAST(O.OP_DATA_CONCLUSAO AS DATE) BETWEEN :DATA_INI AND  :DATA_FIM
        AND O.OP_CODIGO = IO.OP_CODIGO
        AND OS.CLI_CODIGO = :CODE_CLI
        AND O.OP_SITUACAO = :SIT
        INTO
           :QTDE_PC_OP,
           :QTDE_KG_OP,
           :VALOR_OP;


        SELECT
            COALESCE(SUM(I.IOS_QUANTIDADE_PCS),0),
            COALESCE(SUM(I.IOS_QUANTIDADE_KGS),0),
            COALESCE(SUM(I.IOS_VALOR_TOTAL),0)
        FROM
            ITEM_ORDEM_SERVICO I,
            ORDEM_SERVICO OS
        WHERE
            I.OS_CODIGO = OS.OS_CODIGO
        AND CAST(OS.OS_DATA AS DATE) BETWEEN :DATA_INI AND  :DATA_FIM
        AND OS.CLI_CODIGO = :CODE_CLI
        AND OS.OS_SITUACAO = :SIT
        AND OS.OS_TIPO = 'S'
        INTO
           :QTDE_PC_OS,
           :QTDE_KG_OS,
           :VALOR_OS;
      END

      QTDE_KG = QTDE_KG_OS + QTDE_KG_OP;
      QTDE_PC = QTDE_PC_OS + QTDE_PC_OP;
      VLR_SERVICO = VALOR_OS + VALOR_OP;

      if (VLR_SERVICO > 0) then
      begin
        if (QTDE_KG > 0) then
          MEDIA_KG = VLR_SERVICO / QTDE_KG;
        else
          MEDIA_KG = 0;

        if(QTDE_PC > 0) then
          MEDIA_PC = VLR_SERVICO / QTDE_PC;
        else
          MEDIA_PC = 0;

        SELECT
            COALESCE(SUM(IND.IND_VALOR_TOTAL),0)
        FROM
            INDENIZACAO IND
        WHERE
            IND.CLI_CODIGO = :CODE_CLI
        AND IND.IND_SITUACAO = 'A'
        INTO
            :VLR_INDENIZACAO;

        SELECT
            COALESCE(SUM(PC.PCR_VALOR_PARCELA),0)
        FROM
            PARCELA_CONTA_RECEBER PC,
            CONTA_RECEBER CR
        WHERE
            CR.CR_CODIGO = PC.CR_CODIGO
        AND CR.CLI_CODIGO = :CODE_CLI
        AND PC.TD_CODIGO = :CODE_DOC
        AND PC.PCR_SITUACAO IN('A','L')
        INTO
            :VLR_DEBITO;

        SELECT
            COALESCE(SUM(PG.PCP_VALOR_PARCELA),0)
        FROM
            PARCELA_CONTA_PAGAR PG,
            CONTA_PAGAR CP
        WHERE
            CP.CPR_CODIGO = PG.CPR_CODIGO
        AND CP.FORN_CODIGO = :CODE_CLI
        AND PG.TD_CODIGO = :CODE_DOC
        AND PG.PCP_SITUACAO IN('A','L')
        INTO
            :VLR_CREDITO;
        if (PEN ='S') then
        BEGIN
          SELECT
              COALESCE(SUM(IO.IOP_VALOR_TOTAL),0)
          FROM
              ORDEM_PRODUCAO O,
              ITEM_ORDEM_SERVICO I,
              ORDEM_SERVICO OS,
              ITEM_ORDEM_PRODUCAO IO
          WHERE
              O.IOS_CODIGO = I.IOS_CODIGO
          AND I.OS_CODIGO = OS.OS_CODIGO
          AND O.OP_CODIGO = IO.OP_CODIGO
          AND CAST(O.OP_DATA_CONCLUSAO AS DATE) < :DATA_INI
          AND OS.CLI_CODIGO = :CODE_CLI
          AND O.OP_SITUACAO = 'N'
          INTO
              :TOT_OP_PEN;

          SELECT
              COALESCE(SUM(I.IOS_VALOR_TOTAL),0)
          FROM
              ORDEM_SERVICO OS,
              ITEM_ORDEM_SERVICO I
          WHERE
              OS.OS_CODIGO = I.OS_CODIGO
          AND CAST(OS.OS_DATA AS DATE) < :DATA_INI
          AND OS.CLI_CODIGO = :CODE_CLI
          AND OS.OS_SITUACAO = 'N'
          AND OS.OS_TIPO = 'S'
          INTO
              :TOT_OS_PEN;
          VLR_PENDENTE = TOT_OP_PEN + TOT_OS_PEN;
        END
        ELSE
          VLR_PENDENTE = 0;

        VLR_TOTAL = (VLR_SERVICO + VLR_DEBITO + VLR_PENDENTE) - (VLR_CREDITO + VLR_INDENIZACAO);
        SUSPEND;
      END
   END
END;

COMMIT;
