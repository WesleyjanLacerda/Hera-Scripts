SET TERM ^ ;

CREATE OR ALTER PROCEDURE SELECT_RESUMO_CUSTO (
    DATA_INI DATE,
    DATA_FIM DATE,
    EMPRESA_INI INTEGER,
    EMPRESA_FIM INTEGER,
    GRUPO_INI INTEGER,
    GRUPO_FIM INTEGER,
    CUSTO_INI INTEGER,
    CUSTO_FIM INTEGER)
RETURNS (
    GRUPO VARCHAR(60),
    CUSTO VARCHAR(60),
    NOME_FORNECEDOR VARCHAR(60),
    VLR_PAGAR DOUBLE PRECISION,
    VLR_JUROS DOUBLE PRECISION,
    VLR_DESC DOUBLE PRECISION,
    VLR_TOTAL DOUBLE PRECISION,
    PERC DOUBLE PRECISION)
AS
DECLARE VARIABLE TOTAL DOUBLE PRECISION;
BEGIN
  SELECT SUM(B.BCP_VALOR)
  FROM CENTRO_CUSTO C,
       PARCELA_CONTA_PAGAR P,
       BAIXA_CONTA_PAGAR B,
       CONTA_PAGAR CP,
       PESSOA PE
  WHERE B.PCP_CODIGO = P.PCP_CODIGO
    AND B.CPR_CODIGO = P.CPR_CODIGO
    AND P.CPR_CODIGO = CP.CPR_CODIGO
    AND P.CC_CODIGO = C.CC_CODIGO
    AND CP.FORN_CODIGO = PE.PES_CODIGO
    AND B.BCP_DATA BETWEEN :DATA_INI AND :DATA_FIM
    AND P.CC_CODIGO BETWEEN :CUSTO_INI AND :CUSTO_FIM
    AND CP.EMP_CODIGO BETWEEN :EMPRESA_INI AND :EMPRESA_FIM
    AND C.GCC_CODIGO BETWEEN :GRUPO_INI AND :GRUPO_FIM
  INTO :TOTAL;

  FOR
    SELECT C.CC_NOME,
           G.GCC_NOME,
           PE.PES_NOME,
           SUM(B.BCP_JUROS),
           SUM(B.BCP_DESCONTO),
           SUM(B.BCP_VALOR)
    FROM CENTRO_CUSTO C,
         PARCELA_CONTA_PAGAR P,
         BAIXA_CONTA_PAGAR B,
         CONTA_PAGAR CP,
         GRUPO_CENTRO_CUSTO G,
         PESSOA PE
    WHERE B.PCP_CODIGO = P.PCP_CODIGO
      AND B.CPR_CODIGO = P.CPR_CODIGO
      AND P.CPR_CODIGO = CP.CPR_CODIGO
      AND P.CC_CODIGO = C.CC_CODIGO
      AND C.GCC_CODIGO = G.GCC_CODIGO
      AND CP.FORN_CODIGO = PE.PES_CODIGO
      AND B.BCP_DATA BETWEEN :DATA_INI AND :DATA_FIM
      AND P.CC_CODIGO BETWEEN :CUSTO_INI AND :CUSTO_FIM
      AND CP.EMP_CODIGO BETWEEN :EMPRESA_INI AND :EMPRESA_FIM
      AND C.GCC_CODIGO BETWEEN :GRUPO_INI AND :GRUPO_FIM
    GROUP BY C.CC_NOME, G.GCC_NOME, PE.PES_NOME
    INTO :CUSTO,
         :GRUPO,
         :NOME_FORNECEDOR,
         :VLR_JUROS,
         :VLR_DESC,
         :VLR_TOTAL
  DO
  BEGIN
    VLR_PAGAR = VLR_TOTAL + VLR_DESC - VLR_JUROS;
    PERC = (VLR_TOTAL * 100) / TOTAL;
    SUSPEND;
  END
END^

SET TERM ; ^

COMMIT;

SET TERM ^ ;

CREATE OR ALTER TRIGGER ORDEM_PRODUCAO_BI0 FOR ORDEM_PRODUCAO
ACTIVE BEFORE INSERT POSITION 0
AS
DECLARE VARIABLE CODE INTEGER;
BEGIN
  SELECT O.CLI_CODIGO
  FROM ORDEM_SERVICO O,
       ITEM_ORDEM_SERVICO I
  WHERE O.OS_CODIGO = I.OS_CODIGO
    AND I.IOS_CODIGO = NEW.IOS_CODIGO
  INTO :CODE;
  NEW.CLI_CODIGO = :CODE;
END^

SET TERM ; ^

COMMIT;

CREATE INDEX ORDEM_SERVICO_IDX1 ON ORDEM_SERVICO (CLI_CODIGO, OS_TIPO, OS_SITUACAO);
CREATE INDEX ORDEM_SERVICO_IDX2 ON ORDEM_SERVICO (OS_TIPO, OS_SITUACAO);

COMMIT;

SET TERM ^ ;

create or alter procedure SELECT_QTDE_PRODUZIR_OS
returns (
    CODE_OS integer,
    CODE_OS_ANT integer,
    DATA_OS date,
    CODE_IOS integer,
    NOME_CLIENTE varchar(60),
    TIPO_PEC varchar(60),
    REFERENCIA varchar(20),
    OP_EXT integer,
    QTDE_PRODUZIR integer,
    OBSERVACAO blob sub_type 0 segment size 80)
as
declare variable QTDE_OS integer;
declare variable QTDE_OP integer;
BEGIN
  FOR
    SELECT
        O.OS_CODIGO,
        O.OS_CODIGO_OLD,
        CAST(O.OS_DATA AS DATE),
        P.PES_NOME,
        O.OS_OBSERVACAO
    FROM
        ORDEM_SERVICO O,
        PESSOA P
    WHERE
        O.CLI_CODIGO = P.PES_CODIGO
    AND O.OS_SITUACAO = 'A'
    AND O.OS_TIPO = 'E'
    INTO
        :CODE_OS,
        :CODE_OS_ANT,
        :DATA_OS,
        :NOME_CLIENTE,
        :OBSERVACAO
    DO
    BEGIN
      FOR
        SELECT
            I.IOS_CODIGO,
            I.IOS_TIPO,
            I.IOS_REFERENCIA,
            I.IOS_OP_EXT,
            I.IOS_QUANTIDADE_PCS
        FROM
            ITEM_ORDEM_SERVICO I
        WHERE
            I.OS_CODIGO = :CODE_OS
        INTO
            :CODE_IOS,
            :TIPO_PEC,
            :REFERENCIA,
            :OP_EXT,
            :QTDE_OS
        DO
        BEGIN
          SELECT
               COALESCE(SUM(IO.IOP_QUANTIDADE_PCS),0)
          FROM
              ITEM_ORDEM_PRODUCAO IO,
              ORDEM_PRODUCAO OP
          WHERE
              OP.OP_CODIGO = IO.OP_CODIGO
          AND OP.OP_SITUACAO <> 'C'
          AND IO.IOS_CODIGO = :CODE_IOS
          INTO
              :QTDE_OP;

          QTDE_PRODUZIR = QTDE_OS - QTDE_OP;
          if (QTDE_PRODUZIR > 0) then
           SUSPEND;
        END
    END
END^

SET TERM ; ^

COMMIT;

ALTER TABLE PILOTO ADD PLT_VALOR2 DOUBLE PRECISION;

COMMIT;

SET SQL DIALECT 3;
COMMIT;

ALTER TABLE FECHAMENTO ADD FCH_VALOR_CRD_UTL  DOUBLE PRECISION;

COMMIT;

