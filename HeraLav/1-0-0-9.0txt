--28.08.2025 12.00

UPDATE OR INSERT INTO PARAMETRO
    (PAR_CODIGO, GP_CODIGO, PAR_DESCRICAO, PAR_TIPO_REGISTRO, PAR_MASCARA, PAR_USO, PAR_VALOR, PAR_OBSERVACAO)
VALUES 
    (49, 0, 'TIPO DE IMPRESSÃO O.P', '2', NULL, 0, 1,
CAST('A configuração desse parâmetro define a preferência de tipo de impressão da O.P., com base em 4 opções:
1 - Imprimir Sem Valores. | 2 - Imprimir Valores da O.P.
3 - Imprimir Valores da O.P e dos Processos, opção será marcada automaticamente ao abrir o formulário de opções de impressão.
4 - opção para o modo simples de impressão.' AS BLOB SUB_TYPE 0 SEGMENT SIZE 80))
MATCHING (PAR_CODIGO);

UPDATE OR INSERT INTO PARAMETRO (PAR_CODIGO, GP_CODIGO, PAR_DESCRICAO, PAR_TIPO_REGISTRO, PAR_MASCARA, PAR_USO, PAR_VALOR, PAR_OBSERVACAO)
                         VALUES (40, 2, 'PERMITE MOV. SERV. ART. DATA RETROATIVA', '6', NULL, 0, 'V',
CAST('A configuração desse parâmetro define a habilitação do campo de Data na tela de adicionar serviço artesanal,
1 - Se habilitado, o Campo de data é permitido para todos,
2 - Se desabilitado, o campo de data é habilitador apenas para os funcionários que tiver marcado a opção de Apontador.' AS BLOB SUB_TYPE 0 SEGMENT SIZE 80))
MATCHING (PAR_CODIGO);

-- 29.08.2025 - 15.00



CREATE OR ALTER FUNCTION FIX_MOJIBAKE_WIN1252(
    S VARCHAR(32765) CHARACTER SET WIN1252
) RETURNS VARCHAR(32765) CHARACTER SET WIN1252
AS
BEGIN
  /* letras minúsculas */
  S = REPLACE(S, 'Ã¡', 'á');
  S = REPLACE(S, 'Ã¢', 'â');
  S = REPLACE(S, 'Ã£', 'ã');
  S = REPLACE(S, 'Ã¤', 'ä');
  S = REPLACE(S, 'Ã©', 'é');
  S = REPLACE(S, 'Ãª', 'ê');
  S = REPLACE(S, 'Ã¨', 'è');
  S = REPLACE(S, 'Ã­', 'í');
  S = REPLACE(S, 'Ã³', 'ó');
  S = REPLACE(S, 'Ã´', 'ô');
  S = REPLACE(S, 'Ãµ', 'õ');
  S = REPLACE(S, 'Ã¶', 'ö');
  S = REPLACE(S, 'Ãº', 'ú');
  S = REPLACE(S, 'Ã¼', 'ü');
  S = REPLACE(S, 'Ã§', 'ç');

  /* letras maiúsculas */
  S = REPLACE(S, 'Ã ', 'Á');
  S = REPLACE(S, 'Ã‚', 'Â');
  S = REPLACE(S, 'Ãƒ', 'Ã'); /* raramente aparece isolado; mantemos */
  S = REPLACE(S, 'Ã„', 'Ä');
  S = REPLACE(S, 'Ã‰', 'É');
  S = REPLACE(S, 'ÃŠ', 'Ê');
  S = REPLACE(S, 'Ãˆ', 'È');
  S = REPLACE(S, 'Ã ', 'Í');
  S = REPLACE(S, 'Ã“', 'Ó');
  S = REPLACE(S, 'Ã”', 'Ô');
  S = REPLACE(S, 'Ã•', 'Õ');
  S = REPLACE(S, 'Ã–', 'Ö');
  S = REPLACE(S, 'Ãš', 'Ú');
  S = REPLACE(S, 'Ãœ', 'Ü');
  S = REPLACE(S, 'Ã‡', 'Ç');

  /* pontuação “quebrada” vinda de UTF-8 */
  S = REPLACE(S, 'â€“', '–');  -- en dash
  S = REPLACE(S, 'â€”', '—');  -- em dash
  S = REPLACE(S, 'â€˜', '‘');  -- aspas simples esquerda
  S = REPLACE(S, 'â€™', '’');  -- aspas simples direita
  S = REPLACE(S, 'â€œ', '“');  -- aspas duplas esquerda
  S = REPLACE(S, 'â€', '”');  -- aspas duplas direita
  S = REPLACE(S, 'â€¦', '…');  -- reticências
  S = REPLACE(S, 'Âº', 'º');
  S = REPLACE(S, 'Âª', 'ª');
  S = REPLACE(S, 'Â°', '°');
  S = REPLACE(S, 'Â«', '«');
  S = REPLACE(S, 'Â»', '»');
  S = REPLACE(S, 'Â©', '©');
  S = REPLACE(S, 'Â®', '®');

  RETURN S;
END;


CREATE TABLE NOTIFICACAO (
    ID_NOTIFICACAO    BIGINT GENERATED BY DEFAULT AS IDENTITY,
    EMPRESA_ID        INTEGER,
    TIPO              VARCHAR(30),
    TITULO            VARCHAR(120),
    CORPO             BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    ACAO              VARCHAR(30),
    DADOS_JSON        BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    AUDIENCIA         VARCHAR(30),
    ALVO_USUARIO_ID   INTEGER,
    ALVO_TERMINAL_ID  VARCHAR(60),
    TTL_SEGUNDOS      INTEGER,
    CRIADO_EM         TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    LINK              VARCHAR(200)
);


ALTER TABLE NOTIFICACAO ALTER ID_NOTIFICACAO RESTART WITH 1;
ALTER TABLE NOTIFICACAO ADD PRIMARY KEY (ID_NOTIFICACAO);
CREATE INDEX IDX_NOTIF_AUDIENCIA ON NOTIFICACAO (AUDIENCIA);
CREATE INDEX IDX_NOTIF_EMPRESA ON NOTIFICACAO (EMPRESA_ID, CRIADO_EM);


CREATE OR ALTER TRIGGER TRG_NOTIFICACAO_EVENTO_AI FOR NOTIFICACAO
ACTIVE AFTER INSERT POSITION 0
AS
  DECLARE VARIABLE V_EVENTO VARCHAR(32);
BEGIN
  -- evento por empresa (recomendado)
  IF (NEW.EMPRESA_ID IS NOT NULL) THEN
  BEGIN
    V_EVENTO = 'NOTIF_' || TRIM(CAST(NEW.EMPRESA_ID AS VARCHAR(12)));
  END
  ELSE
  BEGIN
    V_EVENTO = 'NOTIFICACAO_NOVA';
  END

  POST_EVENT V_EVENTO;
END;


CREATE OR ALTER TRIGGER TRG_NOTIFICACAO_FIX_CHARS_BI FOR NOTIFICACAO
ACTIVE BEFORE INSERT OR UPDATE POSITION 0
AS
  DECLARE VARIABLE V_TIT VARCHAR(32765) CHARACTER SET WIN1252;
  DECLARE VARIABLE V_COR VARCHAR(32765) CHARACTER SET WIN1252;
BEGIN
  /* TITULO */
  IF (NEW.TITULO IS NOT NULL) THEN
  BEGIN
    V_TIT = FIX_MOJIBAKE_WIN1252(NEW.TITULO);
    NEW.TITULO = V_TIT;
  END

  /* CORPO (BLOB TEXTO) */
  IF (NEW.CORPO IS NOT NULL) THEN
  BEGIN
    /* converte BLOB -> VARCHAR (limite pr?tico: ajuste se necess?rio) */
    V_COR = CAST(NEW.CORPO AS VARCHAR(32765) CHARACTER SET WIN1252);
    V_COR = FIX_MOJIBAKE_WIN1252(V_COR);
    /* volta para BLOB TEXTO WIN1252 */
    NEW.CORPO = CAST(V_COR AS BLOB SUB_TYPE TEXT CHARACTER SET WIN1252);
  END
END;

COMMIT WORK;
