ALTER TABLE PARCELA_CONTA_RECEBER ADD CLI_CODIGO INTEGER;
CREATE INDEX PARCELA_CONTA_RECEBER_IDX5 ON PARCELA_CONTA_RECEBER (CLI_CODIGO);

COMMIT;

create or alter procedure DADOS_FINANCEIRO_RECEBER_CLIE2 (
    CODE_CLI integer)
returns (
    CODE_PCR integer,
    CODE_EMP integer,
    DATA_CAD date,
    NUM_DOC varchar(15),
    DATA_VENC date,
    NOME_CLI varchar(60),
    VLR_PARC double precision,
    VLR_PAGO double precision,
    VLR_SLDO double precision,
    SITUACAO varchar(1),
    NUMERO varchar(30),
    EMITENTE varchar(60),
    EMISSAO date,
    NSU varchar(15),
    CODE_CR integer,
    CODE_PORT integer,
    CODE_TD integer,
    CODE_BCO integer,
    AGENCIA varchar(15),
    CONTA varchar(20))
as
declare variable CODE_AUX integer;
declare variable CODE_DUP integer;
declare variable NUM_ROWS integer;
declare variable VLR_DESC double precision;
declare variable VLR_JURO double precision;
declare variable VLR_MULTA double precision;
BEGIN
  SELECT
      CAST(PAR_VALOR AS INTEGER)
  FROM
      PARAMETRO
  WHERE
      PAR_CODIGO = 121
  INTO
      :CODE_DUP;

  FOR
    SELECT
        P.CR_CODIGO,
        PS.PES_NOME,
        P.PCR_CODIGO,
        P.CR_CODIGO,
        P.PCR_DOCUMENTO,
        P.PCR_DATA_VENCIMENTO,
        P.PCR_VALOR_PARCELA,
        P.PCR_SITUACAO,
        P.PCR_NSU,
        P.TD_CODIGO,
        P.PORT_CODIGO
    FROM
        PARCELA_CONTA_RECEBER P,
        PESSOA PS
    WHERE
        P.CLI_CODIGO = PS.PES_CODIGO
    AND PS.PES_CODIGO = :CODE_CLI
    INTO
        :CODE_AUX,
        :NOME_CLI,
        :CODE_PCR,
        :CODE_CR,
        :NUM_DOC,
        :DATA_VENC,
        :VLR_PARC,
        :SITUACAO,
        :NSU,
        :CODE_TD,
        :CODE_PORT
    DO
    BEGIN
      EMISSAO = NULL;
      EMITENTE = NULL;
      NUMERO = NULL;
      SELECT
          EMP_CODIGO,
          CAST(CR_DATA_CADASTRO AS DATE)
      FROM
          CONTA_RECEBER
      WHERE
          CR_CODIGO = :CODE_AUX
      INTO
          :CODE_EMP,
          :DATA_CAD;
      if (CODE_TD = CODE_DUP) then
      BEGIN
        SELECT
            P.PCRD_NOSSO_NUMERO,
            B.BCO_NOME
        FROM
            PARCELA_CONTA_RECEBER_DUPLICATA P,
            BANCO B
        WHERE
            P.CR_CODIGO = :CODE_CR
        AND P.PCR_CODIGO = :CODE_PCR
        AND P.BCO_CODIGO = B.BCO_CODIGO
        INTO
            :NUMERO,
            :EMITENTE;
        if (EMITENTE IS NOT NULL) then
          EMISSAO = DATA_CAD;
      END
      ELSE
      BEGIN
        SELECT
            COUNT(*)
        FROM
            TIPO_DOCUMENTO
        WHERE
            TD_CODIGO = :CODE_TD
        AND TD_TIPO = 'C'
        INTO
           :NUM_ROWS;

        if (NUM_ROWS > 0) then
        BEGIN
          SELECT
              BCO_CODIGO,
              PCRC_AGENCIA,
              PCRC_CONTA,
              PCRC_NUMERO,
              PCRC_EMITENTE
          FROM
              PARCELA_CONTA_RECEBER_CHEQUE
          WHERE
              CR_CODIGO = :CODE_CR
          AND PCR_CODIGO = :CODE_PCR
          INTO
              :CODE_BCO,
              :AGENCIA,
              :CONTA,
              :NUMERO,
              :EMITENTE;
          if (EMITENTE IS NOT NULL) then
            EMISSAO = DATA_CAD;
        END
      END

      SELECT
           COALESCE(SUM(BCR_DESCONTO),0),
           COALESCE(SUM(BCR_JUROS),0),
           COALESCE(SUM(BCR_MULTA),0),
           COALESCE(SUM(BCR_VALOR),0)
       FROM
           BAIXA_CONTA_RECEBER
       WHERE
           PCR_CODIGO = :CODE_PCR
       INTO
           :VLR_DESC,
           :VLR_JURO,
           :VLR_MULTA,
           :VLR_PAGO;

       if (VLR_PAGO > 0) then
       BEGIN
          VLR_SLDO = VLR_PARC - VLR_PAGO - VLR_DESC + VLR_JURO + VLR_MULTA;
         if (VLR_SLDO < 0) then
           VLR_SLDO = 0;
       END
       ELSE
         VLR_SLDO = VLR_PARC;

      SUSPEND;
    END
END;

COMMIT;

create or alter procedure SELECT_RESUMO_FINANCEIRO_CLI (
    DATA_INI date,
    DATA_FIM date,
    DATA_OP_INI date,
    DATA_OP_FIM date,
    CLI_INI integer,
    CLI_FIM integer,
    REP_INI integer,
    REP_FIM integer)
returns (
    CODE_CLI integer,
    NOME_CLI varchar(60),
    MARCA_CLI varchar(60),
    SITUACAO_CLI varchar(1),
    TIPO varchar(10),
    DESCRICAO varchar(50),
    VALOR double precision)
as
declare variable DATA date;
declare variable DOC integer;
declare variable MES integer;
declare variable ANO integer;
BEGIN
  SELECT
      CAST(PAR_VALOR AS INTEGER)
  FROM
      PARAMETRO
  WHERE
      PAR_CODIGO = 9
  INTO
      :DOC;

  FOR
    SELECT
        CL.CLI_CODIGO,
        P.PES_NOME,
        M.MARC_NOME,
        CL.CLI_ATIVO
    FROM
        CLIENTE CL,
        REPRESENTANTE RP,
        PESSOA P,
        MARCA M
    WHERE
        CL.REP_CODIGO = RP.REP_CODIGO
    AND CL.CLI_CODIGO = P.PES_CODIGO
    AND CL.MARC_CODIGO = M.MARC_CODIGO
    AND CL.CLI_CODIGO BETWEEN :CLI_INI AND :CLI_FIM
    AND CL.REP_CODIGO BETWEEN :REP_INI AND :REP_FIM
    AND CL.GC_CODIGO <> 3
    INTO
        :CODE_CLI,
        :NOME_CLI,
        :MARCA_CLI,
        :SITUACAO_CLI
    DO
    BEGIN
      FOR
        SELECT
            'CHEQUE DEVOLVIDO',
            SUM(C.VLR_SLDO)
        FROM
            DADOS_FINANCEIRO_RECEBER_CLIE2(:CODE_CLI) C,
            PORTADOR P
        WHERE
            C.VLR_SLDO > 0
        AND C.SITUACAO IN('A','L')
        AND C.DATA_VENC BETWEEN :DATA_INI AND :DATA_FIM
        AND C.CODE_PORT = P.PORT_CODIGO
        AND P.PORT_CODIGO = 3
        GROUP BY 'CHEQUE DEVOLVIDO'
        INTO
           :DESCRICAO,
           :VALOR
        DO
        BEGIN
          if (VALOR > 0) then
          BEGIN
            TIPO = 'A RECEBER';
            SUSPEND;
          END
        END

     FOR
        SELECT
            'INDENIZACOES',
            SUM(I.IND_VALOR_TOTAL)
        FROM
            INDENIZACAO I
        WHERE
            I.IND_SITUACAO = 'A'
        AND CAST(I.IND_DATA AS DATE) BETWEEN :DATA_INI AND :DATA_FIM
        AND I.CLI_CODIGO = :CODE_CLI
        GROUP BY 'INDENIZACOES'
        INTO
           :DESCRICAO,
           :VALOR
        DO
        BEGIN
          if (VALOR > 0) then
          BEGIN
            TIPO = 'A PAGAR';
            SUSPEND;
          END
        END

      FOR
        SELECT
            S.SALDO_DEVEDOR,
            S.DATA_COMPRA
        FROM
            SELECT_CTA_PAGAR_FORN(:CODE_CLI) S
        WHERE S.SALDO_DEVEDOR > 0
        AND S.DATA_COMPRA BETWEEN :DATA_INI AND :DATA_FIM
        AND S.CODE_DOC = 8
        INTO
           :VALOR,
           :DATA
        DO
        BEGIN
          TIPO = 'A PAGAR';
          DESCRICAO = CAST('CREDITO FECHAMENTO OPs. DIA : ' || CAST(:DATA AS VARCHAR(12)) AS VARCHAR(50));
          SUSPEND;
        END

      FOR
        SELECT
            C.DATA_CAD,
            C.VLR_SLDO
        FROM
            DADOS_FINANCEIRO_RECEBER_CLIE2(:CODE_CLI) C
        WHERE
            C.VLR_SLDO > 0
        AND C.SITUACAO in('A','L')
        AND C.DATA_VENC BETWEEN :DATA_INI AND :DATA_FIM
        AND C.CODE_TD = :DOC
        INTO
           :DATA,
           :VALOR
        DO
        BEGIN
          TIPO = 'A RECEBER';
          DESCRICAO = CAST('DEBITO FECHAMENTO DE OPs. DIA : ' || CAST(:DATA AS VARCHAR(12)) AS VARCHAR(50));
          SUSPEND;
        END


      FOR
        SELECT
            EXTRACT(MONTH FROM O.OP_DATA_CONCLUSAO),
            EXTRACT(YEAR FROM O.OP_DATA_CONCLUSAO),
            SUM(I.IOP_VALOR_TOTAL)
        FROM
            ORDEM_PRODUCAO O,
            ITEM_ORDEM_PRODUCAO I

        WHERE
            I.OP_CODIGO = O.OP_CODIGO
        AND O.CLI_CODIGO = :CODE_CLI
        AND O.OP_SITUACAO = 'N'
        AND CAST(O.OP_DATA_CONCLUSAO AS DATE) BETWEEN :DATA_OP_INI AND :DATA_OP_FIM
        GROUP BY
            EXTRACT(MONTH FROM O.OP_DATA_CONCLUSAO),
            EXTRACT(YEAR FROM O.OP_DATA_CONCLUSAO)
        INTO
            :MES,
            :ANO, 
            :VALOR
        DO
        BEGIN
          if (VALOR > 0) then
          BEGIN
            TIPO = 'A RECEBER';
            DESCRICAO  = 'OPs PEND. FECH.' || :MES || '-' || :ANO;
            SUSPEND;
          END
        END
    END
END;

COMMIT;

SET TERM ^ ;

create or alter procedure SELECT_FINANCEIRO_FECHAMENTO (
    CODE integer)
returns (
    CODE_CR integer,
    CODE_PCR integer,
    CR_DATA date,
    DATA_VENCIMENTO date,
    DOCUMENTO varchar(15),
    NOME_DOC varchar(50),
    VALOR_PARCELA double precision,
    CODE_BCO integer,
    AGENCIA_ACEITE varchar(15),
    CONTA_DOCUMENTO varchar(15),
    NUMERO varchar(20),
    EMITENTE_SACADO varchar(60))
as
declare variable CODE_CHQ integer;
declare variable CODE_DUP integer;
declare variable CODE_DOC integer;
BEGIN
  SELECT
      CAST(PAR_VALOR AS INTEGER)
  FROM
      PARAMETRO
  WHERE
      PAR_CODIGO = 7
  INTO
      :CODE_CHQ;

  SELECT
      CAST(PAR_VALOR AS INTEGER)
  FROM
      PARAMETRO
  WHERE
      PAR_CODIGO = 11
  INTO
      :CODE_DUP;

  FOR
    SELECT
        F.CR_CODIGO,
        F.PCR_CODIGO,
        CAST(C.CR_DATA_CADASTRO AS DATE) AS CR_DATA,
        P.PCR_DATA_VENCIMENTO,
        P.PCR_DOCUMENTO,
        P.TD_CODIGO,
        T.TD_NOME,
        P.PCR_VALOR_PARCELA
    FROM
        FECHAMENTO_FINANCEIRO F,
        CONTA_RECEBER C,
        PARCELA_CONTA_RECEBER P,
        TIPO_DOCUMENTO T
    WHERE
        F.CR_CODIGO = C.CR_CODIGO
    AND F.PCR_CODIGO = P.PCR_CODIGO
    AND P.TD_CODIGO = T.TD_CODIGO
    AND F.FCH_CODIGO = :CODE
    INTO
        :CODE_CR,
        :CODE_PCR,
        :CR_DATA,
        :DATA_VENCIMENTO,
        :DOCUMENTO,
        :CODE_DOC, 
        :NOME_DOC,
        :VALOR_PARCELA
    DO
    BEGIN
      if (CODE_DOC = CODE_CHQ) then
      BEGIN
        SELECT
            PC.BCO_CODIGO,
            PC.PCRC_AGENCIA,
            PC.PCRC_CONTA,
            PC.PCRC_NUMERO,
            PC.PCRC_EMITENTE
        FROM
            PARCELA_CONTA_RECEBER_CHEQUE PC
        WHERE
            PC.CR_CODIGO = :CODE_CR
        AND PC.PCR_CODIGO = :CODE_PCR
        INTO
            :CODE_BCO,
            :AGENCIA_ACEITE,
            :CONTA_DOCUMENTO,
            :NUMERO,
            :EMITENTE_SACADO;
      END
      else
        if (CODE_DOC = CODE_DUP) then
        BEGIN
          SELECT
              PC.BCO_CODIGO,
              PC.PCRD_ACEITE,
              PC.PCRD_DOCUMENTO,
              PC.PCRD_NOSSO_NUMERO,
              PC.PCRD_SACADO
          FROM
              PARCELA_CONTA_RECEBER_DUPLICATA PC
          WHERE
              PC.CR_CODIGO = :CODE_CR
          AND PC.PCR_CODIGO = :CODE_PCR
          INTO
              :CODE_BCO,
              :AGENCIA_ACEITE,
              :CONTA_DOCUMENTO,
              :NUMERO,
              :EMITENTE_SACADO;
        END
        ELSE
        BEGIN
          CODE_BCO = NULL;
          AGENCIA_ACEITE = NULL;
          CONTA_DOCUMENTO = NULL;
          NUMERO = NULL;
          EMITENTE_SACADO = NULL;
        END
      SUSPEND;
    END
END;

