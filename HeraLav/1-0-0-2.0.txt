create or alter procedure SELECT_PROCESSO_OP (
    CODE integer,
    QTDE_PC integer,
    QTDE_KG double precision)
returns (
    CODE_OP integer,
    CODE_OS integer,
    CODE_PLT integer,
    NOME_PILOTO varchar(60),
    LACRE varchar(30),
    NOME_CLIENTE varchar(60),
    TIPO_PECA varchar(60),
    REFERENCIA varchar(20),
    OP_EXT integer,
    QTDE_PCS_OS integer,
    QTDE_PCS integer,
    QTDE_KGS double precision,
    QTDE_GRAMAS double precision,
    ORDEM integer,
    NOME_PROCESSO varchar(60),
    NOME_PRODUTO varchar(60),
    PERCENTUAL double precision,
    TEMPO double precision,
    TEMPERATURA double precision,
    RELACAO_BANHO double precision,
    OBS_PLT blob sub_type 1 segment size 80)
as
declare variable CODE_PRD integer;
declare variable CODE_PRC integer;
declare variable PERC_AUX double precision;
declare variable TEMPO_AUX integer;
declare variable TEMPERATURA_AUX integer;
declare variable BANHO_AUX integer;
BEGIN
  FOR
    SELECT
        OP.OP_CODIGO,
        IOS.OS_CODIGO,
        P.PES_NOME,
        IOS.IOS_QUANTIDADE_PCS,
        IOS.IOS_TIPO,
        IOS.IOS_REFERENCIA,
        IOS.IOS_OP_EXT
    FROM
        ORDEM_PRODUCAO OP,
        ITEM_ORDEM_SERVICO IOS,
        ORDEM_SERVICO OS,
        PESSOA P
    WHERE
        OP.IOS_CODIGO = IOS.IOS_CODIGO
    AND IOS.OS_CODIGO = OS.OS_CODIGO
    AND OS.CLI_CODIGO = P.PES_CODIGO
    AND OP.OP_CODIGO = :CODE
    INTO
        :CODE_OP,
        :CODE_OS,
        :NOME_CLIENTE,
        :QTDE_PCS_OS,
        :TIPO_PECA,
        :REFERENCIA,
        :OP_EXT
    DO
    BEGIN
      SELECT
          PLT.PLT_CODIGO,
          PLT.PLT_DESCRICAO,
          PLT.PLT_LACRE,
          PLT.PLT_OBSERVACAO
      FROM
          ITEM_ORDEM_PRODUCAO IOP
      LEFT OUTER JOIN PILOTO PLT
      ON IOP.PLT_CODIGO = PLT.PLT_CODIGO
      WHERE
          IOP.OP_CODIGO = :CODE_OP
      INTO
          :CODE_PLT,
          :NOME_PILOTO,
          :LACRE,
          :OBS_PLT;

      QTDE_PCS = QTDE_PC;
      QTDE_KGS = QTDE_KG;
      FOR
        SELECT
            PRC.PRC_CODIGO,
            PRC.PRC_NOME,
            IP.PRD_CODIGO,
            PRD.PRD_DESCRICAO,
            IP.IP_PERCENTUAL,
            IP.IP_TEMPO,
            IP.IP_TEMPERATURA,
            IP.IP_FATOR_BANHO,
            POP.POP_ORDEM
        FROM
            PROCESSO PRC,
            PROCESSO_ORDEM_PRODUCAO POP,
            PRODUTO PRD,
            ITEM_PROCESSO IP
        WHERE
            PRC.PRC_CODIGO = POP.PRC_CODIGO
        AND PRC.PRC_CODIGO = IP.PRC_CODIGO
        AND IP.PRD_CODIGO = PRD.PRD_CODIGO
        AND POP.OP_CODIGO = :CODE_OP
        INTO
           :CODE_PRC,
           :NOME_PROCESSO,
           :CODE_PRD,
           :NOME_PRODUTO,
           :PERCENTUAL,
           :TEMPO,
           :TEMPERATURA,
           :RELACAO_BANHO,
           :ORDEM

        DO
        BEGIN
          PERC_AUX = 0;
          TEMPO_AUX = 0;
          TEMPERATURA_AUX = 0;
          BANHO_AUX = 0;
          SELECT
              IPOP.IPOP_PERCENTUAL,
              IPOP.IPOP_TEMPO,
              IPOP.IPOP_TEMPERATURA,
              IPOP.IPOP_FATOR_BANHO
          FROM
              ITEM_PROCESSO_ORDEM_PRODUCAO IPOP
          WHERE
              IPOP.PRD_CODIGO = :CODE_PRD
          AND IPOP.PRC_CODIGO = :CODE_PRC
          AND IPOP.OP_CODIGO = :CODE_OP
          INTO
              :PERC_AUX,
              :TEMPO_AUX,
              :TEMPERATURA_AUX,
              :BANHO_AUX;

          if (PERC_AUX > 0) then
          BEGIN
            PERCENTUAL = PERC_AUX;
            TEMPO = TEMPO_AUX;
            TEMPERATURA = TEMPERATURA_AUX;
            RELACAO_BANHO = BANHO_AUX;
          END

          QTDE_GRAMAS = ((QTDE_KGS * PERCENTUAL) / 100) * 1000;
          RELACAO_BANHO = RELACAO_BANHO * QTDE_KGS;
          SUSPEND;
        END
    END
END;

COMMIT WORK;
