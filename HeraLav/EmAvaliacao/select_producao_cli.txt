SET TERM ^ ;

create or alter procedure SELECT_PRODUCAO_CLI (
    DATA_INI date,
    DATA_FIM date,
    CLIENTE_INI integer,
    CLIENTE_FIM integer,
    REP_INI integer,
    REP_FIM integer,
    SIT varchar(1),
    PEN varchar(1))
returns (
    CODE_CLI integer,
    NOME_CLI varchar(60),
    MARCA_CLI varchar(30),
    QTDE_KG double precision,
    QTDE_PC double precision,
    MEDIA_PC double precision,
    MEDIA_KG double precision,
    VLR_SERVICO double precision,
    VLR_CREDITO double precision,
    VLR_DEBITO double precision,
    VLR_INDENIZACAO double precision,
    VLR_PENDENTE double precision,
    VLR_TOTAL double precision)
as
declare variable CODE_DOC integer;
declare variable QTDE_PC_OP integer;
declare variable QTDE_PC_OS integer;
declare variable QTDE_KG_OP double precision;
declare variable QTDE_KG_OS double precision;
declare variable VALOR_OP double precision;
declare variable VALOR_OS double precision;
declare variable TOT_OP_PEN double precision;
declare variable TOT_OS_PEN double precision;
declare variable CHQ_DEV double precision;
declare variable VLR_PAG_DEV double precision;
declare variable VLR_BAIXA_CRD double precision;
declare variable DEBITO_BAIXA double precision;
begin
  SELECT
      CAST(PAR_VALOR AS INTEGER)
  FROM
      PARAMETRO
  WHERE
      PAR_CODIGO = 9
  INTO
      :CODE_DOC;

  FOR
    SELECT
        C.CLI_CODIGO, 
        P.PES_NOME,
        M.MARC_NOME

    FROM
        CLIENTE C,
        PESSOA P,
        MARCA M
    WHERE
        C.CLI_CODIGO = P.PES_CODIGO
    AND C.MARC_CODIGO = M.MARC_CODIGO
    AND C.CLI_CODIGO BETWEEN :CLIENTE_INI AND :CLIENTE_FIM
    AND C.REP_CODIGO BETWEEN :REP_INI AND :REP_FIM
    INTO
        :CODE_CLI,
        :NOME_CLI,
        :MARCA_CLI
    DO
    BEGIN
      if (SIT = 'A') then
      BEGIN
        SELECT
            COALESCE(SUM(IO.IOP_QUANTIDADE_PCS),0),
            COALESCE(SUM(IO.IOP_QUANTIDADE_KGS),0),
            COALESCE(SUM(IO.IOP_VALOR_TOTAL),0)
        FROM
            ORDEM_PRODUCAO O,
            ITEM_ORDEM_SERVICO I,
            ORDEM_SERVICO OS,
            ITEM_ORDEM_PRODUCAO IO
        WHERE
            O.IOS_CODIGO = I.IOS_CODIGO
        AND I.OS_CODIGO = OS.OS_CODIGO
        AND CAST(O.OP_DATA_CONCLUSAO AS DATE) BETWEEN :DATA_INI AND  :DATA_FIM
        AND O.OP_CODIGO = IO.OP_CODIGO
        AND OS.CLI_CODIGO = :CODE_CLI
        AND O.OP_SITUACAO IN('N','F')
        INTO
           :QTDE_PC_OP,
           :QTDE_KG_OP,
           :VALOR_OP;


        SELECT
            COALESCE(SUM(I.IOS_QUANTIDADE_PCS),0),
            COALESCE(SUM(I.IOS_QUANTIDADE_KGS),0),
            COALESCE(SUM(I.IOS_VALOR_TOTAL),0)
        FROM
            ITEM_ORDEM_SERVICO I,
            ORDEM_SERVICO OS
        WHERE
            I.OS_CODIGO = OS.OS_CODIGO
        AND CAST(OS.OS_DATA AS DATE) BETWEEN :DATA_INI AND  :DATA_FIM
        AND OS.CLI_CODIGO = :CODE_CLI
        AND OS.OS_SITUACAO IN('N','F')
        AND OS.OS_TIPO = 'S'
        INTO
           :QTDE_PC_OS,
           :QTDE_KG_OS,
           :VALOR_OS;
      END
      ELSE
      BEGIN
        SELECT
            COALESCE(SUM(IO.IOP_QUANTIDADE_PCS),0),
            COALESCE(SUM(IO.IOP_QUANTIDADE_KGS),0),
            COALESCE(SUM(IO.IOP_VALOR_TOTAL),0)
        FROM
            ORDEM_PRODUCAO O,
            ITEM_ORDEM_SERVICO I,
            ORDEM_SERVICO OS,
            ITEM_ORDEM_PRODUCAO IO
        WHERE
            O.IOS_CODIGO = I.IOS_CODIGO
        AND I.OS_CODIGO = OS.OS_CODIGO
        AND CAST(O.OP_DATA_CONCLUSAO AS DATE) BETWEEN :DATA_INI AND  :DATA_FIM
        AND O.OP_CODIGO = IO.OP_CODIGO
        AND OS.CLI_CODIGO = :CODE_CLI
        AND O.OP_SITUACAO = :SIT
        INTO
           :QTDE_PC_OP,
           :QTDE_KG_OP,
           :VALOR_OP;


        SELECT
            COALESCE(SUM(I.IOS_QUANTIDADE_PCS),0),
            COALESCE(SUM(I.IOS_QUANTIDADE_KGS),0),
            COALESCE(SUM(I.IOS_VALOR_TOTAL),0)
        FROM
            ITEM_ORDEM_SERVICO I,
            ORDEM_SERVICO OS
        WHERE
            I.OS_CODIGO = OS.OS_CODIGO
        AND CAST(OS.OS_DATA AS DATE) BETWEEN :DATA_INI AND  :DATA_FIM
        AND OS.CLI_CODIGO = :CODE_CLI
        AND OS.OS_SITUACAO = :SIT
        AND OS.OS_TIPO = 'S'
        INTO
           :QTDE_PC_OS,
           :QTDE_KG_OS,
           :VALOR_OS;
      END

      QTDE_KG = QTDE_KG_OS + QTDE_KG_OP;
      QTDE_PC = QTDE_PC_OS + QTDE_PC_OP;
      VLR_SERVICO = VALOR_OS + VALOR_OP;

      if (VLR_SERVICO > 0) then
      begin
        if (QTDE_KG > 0) then
          MEDIA_KG = VLR_SERVICO / QTDE_KG;
        else
          MEDIA_KG = 0;

        if(QTDE_PC > 0) then
          MEDIA_PC = VLR_SERVICO / QTDE_PC;
        else
          MEDIA_PC = 0;

        SELECT
            COALESCE(SUM(IND.IND_VALOR_TOTAL),0)
        FROM
            INDENIZACAO IND
        WHERE
            IND.CLI_CODIGO = :CODE_CLI
        AND IND.IND_SITUACAO = 'A'
        INTO
            :VLR_INDENIZACAO;

        SELECT
            COALESCE(SUM(PC.PCR_VALOR_PARCELA),0)
        FROM
            PARCELA_CONTA_RECEBER PC,
            CONTA_RECEBER CR
        WHERE
            CR.CR_CODIGO = PC.CR_CODIGO
        AND CR.CLI_CODIGO = :CODE_CLI
        AND PC.TD_CODIGO = :CODE_DOC
        AND PC.PCR_SITUACAO IN('A','L')
        INTO
            :VLR_DEBITO;

        SELECT
            COALESCE(SUM(PC.PCR_VALOR_PARCELA),0)
        FROM
            PARCELA_CONTA_RECEBER PC,
            CONTA_RECEBER CR,
            PORTADOR PT
        WHERE
            CR.CR_CODIGO = PC.CR_CODIGO
        AND CR.CLI_CODIGO = :CODE_CLI
        AND PC.PCR_SITUACAO IN('A','L')
        AND PT.PORT_CODIGO = PC.PORT_CODIGO
        AND PT.PORT_NOME LIKE '%CHEQUE DEVOLVIDO%'
        INTO
            :CHQ_DEV;

        SELECT
            COALESCE(SUM(BC.BCR_VALOR),0)
        FROM
            PARCELA_CONTA_RECEBER PC,
            CONTA_RECEBER CR,
            PORTADOR PT,
            BAIXA_CONTA_RECEBER BC
        WHERE
            CR.CR_CODIGO = PC.CR_CODIGO
        AND CR.CLI_CODIGO = :CODE_CLI
        AND PC.PCR_CODIGO = BC.PCR_CODIGO
        AND PC.PCR_SITUACAO = 'L'
        AND PT.PORT_CODIGO = PC.PORT_CODIGO
        AND PT.PORT_NOME LIKE '%CHEQUE DEVOLVIDO%'
        INTO
            :VLR_PAG_DEV;

        SELECT
            COALESCE(SUM(BCR.BCR_VALOR),0)
        FROM
            PARCELA_CONTA_RECEBER PC,
            CONTA_RECEBER CR,
            PORTADOR PT,
            BAIXA_CONTA_RECEBER BCR
        WHERE
            CR.CR_CODIGO = PC.CR_CODIGO
        AND CR.CLI_CODIGO = :CODE_CLI
        AND PC.TD_CODIGO = :CODE_DOC
        AND PC.PCR_SITUACAO IN('A','L')
        AND PT.PORT_CODIGO = PC.PORT_CODIGO
        AND PT.PORT_NOME <> '%CHEQUE DEVOLVIDO%'
        AND BCR.PCR_CODIGO = PC.PCR_CODIGO
        INTO
            :DEBITO_BAIXA;


        VLR_DEBITO = VLR_DEBITO + CHQ_DEV - VLR_PAG_DEV - DEBITO_BAIXA;

        SELECT
            COALESCE(SUM(PG.PCP_VALOR_PARCELA),0)
        FROM
            PARCELA_CONTA_PAGAR PG,
            CONTA_PAGAR CP
        WHERE
            CP.CPR_CODIGO = PG.CPR_CODIGO
        AND CP.FORN_CODIGO = :CODE_CLI
        AND PG.TD_CODIGO = :CODE_DOC
        AND PG.PCP_SITUACAO IN('A','L')
        INTO
            :VLR_CREDITO;

        SELECT
            COALESCE(SUM(B.BCP_VALOR),0)
        FROM
            PARCELA_CONTA_PAGAR PG,
            CONTA_PAGAR CP,
            BAIXA_CONTA_PAGAR B
        WHERE
            CP.CPR_CODIGO = PG.CPR_CODIGO
        AND CP.CPR_CODIGO = B.CPR_CODIGO
        AND CP.FORN_CODIGO = :CODE_CLI
        AND PG.TD_CODIGO = :CODE_DOC
        AND PG.PCP_SITUACAO = 'L'
        INTO
            :VLR_BAIXA_CRD;

        VLR_CREDITO = VLR_CREDITO - VLR_BAIXA_CRD;

        if (PEN ='S') then
        BEGIN
          SELECT
              COALESCE(SUM(IO.IOP_VALOR_TOTAL),0)
          FROM
              ORDEM_PRODUCAO O,
              ITEM_ORDEM_SERVICO I,
              ORDEM_SERVICO OS,
              ITEM_ORDEM_PRODUCAO IO
          WHERE
              O.IOS_CODIGO = I.IOS_CODIGO
          AND I.OS_CODIGO = OS.OS_CODIGO
          AND O.OP_CODIGO = IO.OP_CODIGO
          AND CAST(O.OP_DATA_CONCLUSAO AS DATE) < :DATA_INI
          AND OS.CLI_CODIGO = :CODE_CLI
          AND O.OP_SITUACAO = 'N'
          INTO
              :TOT_OP_PEN;

          SELECT
              COALESCE(SUM(I.IOS_VALOR_TOTAL),0)
          FROM
              ORDEM_SERVICO OS,
              ITEM_ORDEM_SERVICO I
          WHERE
              OS.OS_CODIGO = I.OS_CODIGO
          AND CAST(OS.OS_DATA AS DATE) < :DATA_INI
          AND OS.CLI_CODIGO = :CODE_CLI
          AND OS.OS_SITUACAO = 'N'
          AND OS.OS_TIPO = 'S'
          INTO
              :TOT_OS_PEN;
          VLR_PENDENTE = TOT_OP_PEN + TOT_OS_PEN;
        END
        ELSE
          VLR_PENDENTE = 0;

        VLR_TOTAL = (VLR_SERVICO + VLR_DEBITO + VLR_PENDENTE) - (VLR_CREDITO + VLR_INDENIZACAO);
        SUSPEND;
      END
   END
end^

SET TERM ; ^

/* Following GRANT statements are generated automatically */

GRANT SELECT ON PARAMETRO TO PROCEDURE SELECT_PRODUCAO_CLI;
GRANT SELECT ON CLIENTE TO PROCEDURE SELECT_PRODUCAO_CLI;
GRANT SELECT ON PESSOA TO PROCEDURE SELECT_PRODUCAO_CLI;
GRANT SELECT ON MARCA TO PROCEDURE SELECT_PRODUCAO_CLI;
GRANT SELECT ON ORDEM_PRODUCAO TO PROCEDURE SELECT_PRODUCAO_CLI;
GRANT SELECT ON ITEM_ORDEM_SERVICO TO PROCEDURE SELECT_PRODUCAO_CLI;
GRANT SELECT ON ORDEM_SERVICO TO PROCEDURE SELECT_PRODUCAO_CLI;
GRANT SELECT ON ITEM_ORDEM_PRODUCAO TO PROCEDURE SELECT_PRODUCAO_CLI;
GRANT SELECT ON INDENIZACAO TO PROCEDURE SELECT_PRODUCAO_CLI;
GRANT SELECT ON PARCELA_CONTA_RECEBER TO PROCEDURE SELECT_PRODUCAO_CLI;
GRANT SELECT ON CONTA_RECEBER TO PROCEDURE SELECT_PRODUCAO_CLI;
GRANT SELECT ON PORTADOR TO PROCEDURE SELECT_PRODUCAO_CLI;
GRANT SELECT ON BAIXA_CONTA_RECEBER TO PROCEDURE SELECT_PRODUCAO_CLI;
GRANT SELECT ON PARCELA_CONTA_PAGAR TO PROCEDURE SELECT_PRODUCAO_CLI;
GRANT SELECT ON CONTA_PAGAR TO PROCEDURE SELECT_PRODUCAO_CLI;
GRANT SELECT ON BAIXA_CONTA_PAGAR TO PROCEDURE SELECT_PRODUCAO_CLI;

/* Existing privileges on this procedure */

GRANT EXECUTE ON PROCEDURE SELECT_PRODUCAO_CLI TO SYSDBA;