SET TERM ^ ;

create or alter procedure SELECT_DADOS_FECHAMENTO (
    DATA_INI date,
    DATA_FIM date,
    CLIENTE_INI integer,
    CLIENTE_FIM integer,
    REP_INI integer,
    REP_FIM integer)
returns (
    CODE_CLI integer,
    NOME_CLI varchar(60),
    CPF_CNPJ_CLI varchar(15),
    TEL_CLI varchar(15),
    MARCA_CLI varchar(20),
    ENDERECO_CLI varchar(120),
    TOTAL_DEBITOS double precision,
    TOTAL_CREDITOS double precision,
    TOTAL_INDENIZACOES double precision,
    TOTAL_PENDENCIAS double precision,
    TOTAL_SERVICOS double precision,
    TOTAL_FECHAMENTO double precision)
as
declare variable LG varchar(60);
declare variable BAR varchar(30);
declare variable CID varchar(30);
declare variable UFS varchar(2);
declare variable QD varchar(5);
declare variable LT varchar(5);
declare variable NM varchar(5);
declare variable TOT_OP double precision;
declare variable TOT_OS double precision;
declare variable CODE_DOC integer;
declare variable TOT_OP_PEN double precision;
declare variable TOT_OS_PEN double precision;
declare variable CHQ_DEV double precision;
declare variable VLR_PAG_DEV double precision;
declare variable VLR_PAG_CRD double precision;
declare variable DEBITO_BAIXA double precision;
begin
  SELECT
      CAST(PAR_VALOR AS INTEGER)
  FROM
      PARAMETRO
  WHERE
      PAR_CODIGO = 9
  INTO
      :CODE_DOC;

  FOR
    SELECT
        C.CLI_CODIGO, 
        P.PES_NOME,
        P.PES_CPF_CNPJ,
        P.PES_TELEFONE_1,
        M.MARC_NOME,
        E.END_LOGRADOURO,
        E.END_QUADRA,
        E.END_LOTE,
        E.END_NUMERO,
        E.END_BAIRRO,
        CD.CID_NOME,
        U.UF_NOME
    FROM
        CLIENTE C,
        PESSOA P,
        ENDERECO E,
        CIDADE CD,
        UF U,
        MARCA M
    WHERE
        C.CLI_CODIGO = P.PES_CODIGO
    AND C.MARC_CODIGO = M.MARC_CODIGO
    AND P.PES_CODIGO = E.PES_CODIGO
    AND E.CID_CODIGO = CD.CID_CODIGO
    AND CD.UF_CODIGO = U.UF_CODIGO
    AND C.CLI_CODIGO BETWEEN :CLIENTE_INI AND :CLIENTE_FIM
    AND C.REP_CODIGO BETWEEN :REP_INI AND :REP_FIM
    INTO
        :CODE_CLI,
        :NOME_CLI,
        :CPF_CNPJ_CLI,
        :TEL_CLI,
        :MARCA_CLI, 
        :LG,
        :QD,
        :LT, 
        :NM, 
        :BAR,
        :CID,
        :UFS
    DO
    BEGIN
      ENDERECO_CLI = LG;
      if ( NOT NM IS NULL) then
         ENDERECO_CLI = ENDERECO_CLI || ', ' || NM;
      if (NOT QD IS NULL) then
        ENDERECO_CLI = ENDERECO_CLI || ' QD ' || QD;
      if (NOT QD IS NULL) then
        ENDERECO_CLI = ENDERECO_CLI || ' LT ' || LT;
      ENDERECO_CLI = ENDERECO_CLI || ', ' || BAR || ', ' || CID || '-' || UFS;

      SELECT
          COALESCE(SUM(IO.IOP_VALOR_TOTAL),0)
      FROM
          ORDEM_PRODUCAO O,
          ITEM_ORDEM_SERVICO I,
          ORDEM_SERVICO OS,
          ITEM_ORDEM_PRODUCAO IO
      WHERE
          O.IOS_CODIGO = I.IOS_CODIGO
      AND I.OS_CODIGO = OS.OS_CODIGO
      AND O.OP_CODIGO = IO.OP_CODIGO
      AND CAST(O.OP_DATA_CONCLUSAO AS DATE) BETWEEN :DATA_INI AND  :DATA_FIM
      AND OS.CLI_CODIGO = :CODE_CLI
      AND O.OP_SITUACAO = 'N'
      INTO
          :TOT_OP;

      SELECT
          COALESCE(SUM(I.IOS_VALOR_TOTAL),0)
      FROM
          ORDEM_SERVICO OS,
          ITEM_ORDEM_SERVICO I
      WHERE
          OS.OS_CODIGO = I.OS_CODIGO
      AND CAST(OS.OS_DATA AS DATE) BETWEEN :DATA_INI AND  :DATA_FIM
      AND OS.CLI_CODIGO = :CODE_CLI
      AND OS.OS_SITUACAO = 'N'
      AND OS.OS_TIPO = 'S'
      INTO
          :TOT_OS;

      TOTAL_SERVICOS = TOT_OP + TOT_OS;

      if (TOTAL_SERVICOS > 0) then
      BEGIN
        SELECT
            COALESCE(SUM(IND.IND_VALOR_TOTAL),0)
        FROM
            INDENIZACAO IND
        WHERE
            IND.CLI_CODIGO = :CODE_CLI
        AND IND.IND_SITUACAO = 'A'
        INTO
            :TOTAL_INDENIZACOES;

        SELECT
            COALESCE(SUM(PC.PCR_VALOR_PARCELA),0)
        FROM
            PARCELA_CONTA_RECEBER PC,
            CONTA_RECEBER CR
        WHERE
            CR.CR_CODIGO = PC.CR_CODIGO
        AND CR.CLI_CODIGO = :CODE_CLI
        AND PC.TD_CODIGO = :CODE_DOC
        AND PC.PCR_SITUACAO IN('A','L')
        INTO
            :TOTAL_DEBITOS;

        SELECT
            COALESCE(SUM(PC.PCR_VALOR_PARCELA),0)
        FROM
            PARCELA_CONTA_RECEBER PC,
            CONTA_RECEBER CR,
            PORTADOR PT
        WHERE
            CR.CR_CODIGO = PC.CR_CODIGO
        AND CR.CLI_CODIGO = :CODE_CLI
        AND PC.PCR_SITUACAO IN('A','L')
        AND PT.PORT_CODIGO = PC.PORT_CODIGO
        AND PT.PORT_NOME LIKE '%CHEQUE DEVOLVIDO%'
        INTO
            :CHQ_DEV;

        SELECT
            COALESCE(SUM(BC.BCR_VALOR),0)
        FROM
            PARCELA_CONTA_RECEBER PC,
            CONTA_RECEBER CR,
            PORTADOR PT,
            BAIXA_CONTA_RECEBER BC
        WHERE
            CR.CR_CODIGO = PC.CR_CODIGO
        AND CR.CLI_CODIGO = :CODE_CLI
        AND PC.PCR_CODIGO = BC.PCR_CODIGO
        AND PC.PCR_SITUACAO = 'L'
        AND PT.PORT_CODIGO = PC.PORT_CODIGO
        AND PT.PORT_NOME LIKE '%CHEQUE DEVOLVIDO%'
        INTO
            :VLR_PAG_DEV;

        SELECT
            COALESCE(SUM(BCR.BCR_VALOR),0)
        FROM
            PARCELA_CONTA_RECEBER PC,
            CONTA_RECEBER CR,
            PORTADOR PT,
            BAIXA_CONTA_RECEBER BCR
        WHERE
            CR.CR_CODIGO = PC.CR_CODIGO
        AND CR.CLI_CODIGO = :CODE_CLI
        AND PC.TD_CODIGO = :CODE_DOC
        AND PC.PCR_SITUACAO IN('A','L')
        AND PT.PORT_CODIGO = PC.PORT_CODIGO
        AND PT.PORT_NOME <> '%CHEQUE DEVOLVIDO%'
        AND BCR.PCR_CODIGO = PC.PCR_CODIGO
        INTO
            :DEBITO_BAIXA;

        TOTAL_DEBITOS = TOTAL_DEBITOS + CHQ_DEV - VLR_PAG_DEV - DEBITO_BAIXA;


        SELECT
            COALESCE(SUM(PG.PCP_VALOR_PARCELA),0)
        FROM
            PARCELA_CONTA_PAGAR PG,
            CONTA_PAGAR CP
        WHERE
            CP.CPR_CODIGO = PG.CPR_CODIGO
        AND CP.FORN_CODIGO = :CODE_CLI
        AND PG.TD_CODIGO = :CODE_DOC
        AND PG.PCP_SITUACAO IN('A','L')
        INTO
            :TOTAL_CREDITOS;

        SELECT
            COALESCE(SUM(B.BCP_VALOR),0)
        FROM
            PARCELA_CONTA_PAGAR PG,
            CONTA_PAGAR CP,
            BAIXA_CONTA_PAGAR B
        WHERE
            CP.CPR_CODIGO = PG.CPR_CODIGO
        AND CP.FORN_CODIGO = :CODE_CLI
        AND PG.TD_CODIGO = :CODE_DOC
        AND PG.CPR_CODIGO = B.CPR_CODIGO
        AND PG.PCP_SITUACAO = 'L'
        INTO
            :VLR_PAG_CRD;

        TOTAL_CREDITOS = TOTAL_CREDITOS - VLR_PAG_CRD ;

        SELECT
            COALESCE(SUM(IO.IOP_VALOR_TOTAL),0)
        FROM
            ORDEM_PRODUCAO O,
            ITEM_ORDEM_SERVICO I,
            ORDEM_SERVICO OS,
            ITEM_ORDEM_PRODUCAO IO
        WHERE
            O.IOS_CODIGO = I.IOS_CODIGO
        AND I.OS_CODIGO = OS.OS_CODIGO
        AND O.OP_CODIGO = IO.OP_CODIGO
        AND CAST(O.OP_DATA_CONCLUSAO AS DATE) < :DATA_INI
        AND OS.CLI_CODIGO = :CODE_CLI
        AND O.OP_SITUACAO = 'N'
        INTO
            :TOT_OP_PEN;

        SELECT
            COALESCE(SUM(I.IOS_VALOR_TOTAL),0)
        FROM
            ORDEM_SERVICO OS,
            ITEM_ORDEM_SERVICO I
        WHERE
            OS.OS_CODIGO = I.OS_CODIGO
        AND CAST(OS.OS_DATA AS DATE) < :DATA_INI
        AND OS.CLI_CODIGO = :CODE_CLI
        AND OS.OS_SITUACAO = 'N'
        AND OS.OS_TIPO = 'S'
        INTO
            :TOT_OS_PEN;

        TOTAL_PENDENCIAS = TOT_OP_PEN + TOT_OS_PEN;
        TOTAL_FECHAMENTO = (TOTAL_SERVICOS + TOTAL_DEBITOS + TOTAL_PENDENCIAS) - (TOTAL_CREDITOS + TOTAL_INDENIZACOES);
        SUSPEND;
      END
    END
END^

SET TERM ; ^

/* Following GRANT statements are generated automatically */

GRANT SELECT ON PARAMETRO TO PROCEDURE SELECT_DADOS_FECHAMENTO;
GRANT SELECT ON CLIENTE TO PROCEDURE SELECT_DADOS_FECHAMENTO;
GRANT SELECT ON PESSOA TO PROCEDURE SELECT_DADOS_FECHAMENTO;
GRANT SELECT ON ENDERECO TO PROCEDURE SELECT_DADOS_FECHAMENTO;
GRANT SELECT ON CIDADE TO PROCEDURE SELECT_DADOS_FECHAMENTO;
GRANT SELECT ON UF TO PROCEDURE SELECT_DADOS_FECHAMENTO;
GRANT SELECT ON MARCA TO PROCEDURE SELECT_DADOS_FECHAMENTO;
GRANT SELECT ON ORDEM_PRODUCAO TO PROCEDURE SELECT_DADOS_FECHAMENTO;
GRANT SELECT ON ITEM_ORDEM_SERVICO TO PROCEDURE SELECT_DADOS_FECHAMENTO;
GRANT SELECT ON ORDEM_SERVICO TO PROCEDURE SELECT_DADOS_FECHAMENTO;
GRANT SELECT ON ITEM_ORDEM_PRODUCAO TO PROCEDURE SELECT_DADOS_FECHAMENTO;
GRANT SELECT ON INDENIZACAO TO PROCEDURE SELECT_DADOS_FECHAMENTO;
GRANT SELECT ON PARCELA_CONTA_RECEBER TO PROCEDURE SELECT_DADOS_FECHAMENTO;
GRANT SELECT ON CONTA_RECEBER TO PROCEDURE SELECT_DADOS_FECHAMENTO;
GRANT SELECT ON PORTADOR TO PROCEDURE SELECT_DADOS_FECHAMENTO;
GRANT SELECT ON BAIXA_CONTA_RECEBER TO PROCEDURE SELECT_DADOS_FECHAMENTO;
GRANT SELECT ON PARCELA_CONTA_PAGAR TO PROCEDURE SELECT_DADOS_FECHAMENTO;
GRANT SELECT ON CONTA_PAGAR TO PROCEDURE SELECT_DADOS_FECHAMENTO;
GRANT SELECT ON BAIXA_CONTA_PAGAR TO PROCEDURE SELECT_DADOS_FECHAMENTO;

/* Existing privileges on this procedure */

GRANT EXECUTE ON PROCEDURE SELECT_DADOS_FECHAMENTO TO SYSDBA;